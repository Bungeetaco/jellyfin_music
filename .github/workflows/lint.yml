name: Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
        
    - name: Install formatting tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort autoflake
        
    - name: Format with black and isort
      run: |
        black .
        isort .
        
    - name: Remove unused imports
      run: |
        find . -type f -name "*.py" -not -path "./venv/*" -not -path "./.git/*" -exec autoflake --in-place --remove-all-unused-imports --remove-unused-variables {} +
        
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
    - name: Commit changes
      id: commit
      continue-on-error: true
      run: |
        git add .
        git diff --quiet && git diff --staged --quiet || (git commit -m "style: auto-format with black and isort" && git push)
        echo "changes_made=$?" >> $GITHUB_OUTPUT

  lint:
    needs: format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
        
    - name: Wait for format changes
      run: |
        # Wait for potential format changes to be available
        sleep 10
        git pull origin ${{ github.head_ref || 'main' }} --rebase
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy isort
        pip install -r requirements.txt
        
    - name: Check formatting with black
      run: black --check .
      
    - name: Lint with flake8
      run: |
        flake8 . \
          --count \
          --max-line-length=100 \
          --statistics \
          --exclude=.git,__pycache__,build,dist,*.egg-info \
          --extend-ignore=E203,W503 \
          --per-file-ignores="__init__.py:F401"
      
    - name: Type check with mypy
      run: |
        mypy jellyfin_music_organizer \
          --ignore-missing-imports \
          --disallow-untyped-defs \
          --check-untyped-defs \
          --warn-redundant-casts \
          --warn-unused-ignores \
          --warn-return-any \
          --no-warn-unused-ignores

    - name: Check import sorting
      run: isort --check-only --diff .
